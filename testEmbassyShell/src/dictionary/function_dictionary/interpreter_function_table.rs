use super::{FuncDictionary, DictionaryMask, FunctionEntry, InterpreterFunctions};

pub static INTERPRETER_FUNCTIONS_TABLE: [FunctionEntry<InterpreterFunctions>; 157] = [
    FunctionEntry {function_number: InterpreterFunctions::SiCcReturn, function_name : ""},
    FunctionEntry {function_number: InterpreterFunctions::SiCcSpace, function_name : "space"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcCr, function_name : "cr"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcLf, function_name : "lf"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcCrLf, function_name : "crlf"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcReset, function_name : "reset"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcPrompt, function_name : "prompt"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcClearPad, function_name : "clearPad"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDot, function_name : "."},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotByte, function_name : ".b"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotWord, function_name : ".w"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotX, function_name : ".x"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotByteX, function_name : ".bx"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotWordX, function_name : ".wx"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotStr, function_name : ".str"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcHex, function_name : "hex"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDecimal, function_name : "decimal"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcStringDef, function_name : "s'"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcIf, function_name : "["},
    FunctionEntry {function_number: InterpreterFunctions::SiCcElse, function_name : "]["},
    FunctionEntry {function_number: InterpreterFunctions::SiCcThen, function_name : "]"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcBegin, function_name : "{"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcUntil, function_name : "}"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDup, function_name : "dup"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcSwap, function_name : "swap"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcNip, function_name : "nip"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcTuck, function_name : "tuck"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDrop, function_name : "drop"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcRot, function_name : "rot"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcToR, function_name : ">r"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcFromR, function_name : "r>"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcNegate, function_name : "neg"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcPlus, function_name : "+"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcMinus, function_name : "-"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcMultiply, function_name : "*"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcDivide, function_name : "/"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcMod, function_name : "%"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcAnd, function_name : "&"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcOr, function_name : "|"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcXor, function_name : "^"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcLessThan, function_name : "<"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcLessEqual, function_name : "<="},
    FunctionEntry {function_number: InterpreterFunctions::SiCcEqual, function_name : "=="},
    FunctionEntry {function_number: InterpreterFunctions::SiCcGreaterThan, function_name : ">"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcGreaterThanEqual, function_name : ">="},
    FunctionEntry {function_number: InterpreterFunctions::SiCcSetDebug, function_name : "setDebug"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcToC, function_name : ">c"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcFromC, function_name : "c>"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcParameterStackDepth, function_name : "psd?"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcReturnStackDepth, function_name : "rsd?"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcCompileStackDepth, function_name : "csd?"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcParameterStackAt, function_name : "ps@" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcReturnStackAt, function_name : "rs@" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcCompileStackAt, function_name : "cs@" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcNotEqual, function_name : "!=" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcZeroEqual, function_name : "0==" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcZeroNotEqual, function_name : "0!=" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcOver, function_name : "over" },
    FunctionEntry {function_number: InterpreterFunctions::SiCc2dup, function_name : "2dup" },
    FunctionEntry {function_number: InterpreterFunctions::SiCc2drop, function_name : "2drop" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcStrlen, function_name : "strlen" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcGetCurrentDictionary, function_name : "getCurrentDictionary" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcGetCurrentDictionaryEnd, function_name : "getCurrentDictionaryEnd" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcGetCurrentDictionaryLastWord, function_name : "getCurrentDictionaryLastWord" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDelay, function_name : "delay" },
        
    FunctionEntry {function_number: InterpreterFunctions::SiCcNextEntry, function_name : "nextEntry" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotEntryName, function_name : ".entryName" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcEntryToken, function_name : "entryToken" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcKeyQ, function_name : "key?" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcAuxKeyQ, function_name : "auxKey?" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcAuxIO, function_name : "auxIO" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcMainIO, function_name : "mainIO" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcEmit, function_name : "emit" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcAuxEmit, function_name : "auxEmit" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcShellSize, function_name : "shellSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcPrintShellClass, function_name : "printShellClass" },
        
    FunctionEntry {function_number: InterpreterFunctions::SiCcdictionarySize, function_name : "dictionarySize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcPadSize, function_name : "padSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcNumRegisters, function_name : "numRegisters" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcParameterStackSize, function_name : "parameterStackSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcReturnStackSize, function_name : "returnStackSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcCompileStackSize, function_name : "compileStackSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcInqSize, function_name : "inqSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcAuxInqSize, function_name : "auxInqSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcOutqSize, function_name : "outqSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcAuxOutqSize, function_name : "auxOutqSize" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDictionaryClear, function_name : "dictClear" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcSetCommandEcho, function_name : "setCommandEcho" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcSetExpandCR, function_name : "setExpandCR" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcSysticks, function_name : "systicks" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcMicros, function_name : "micros" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcMillis, function_name : "millis" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcBang, function_name : "!" },
    FunctionEntry {function_number: InterpreterFunctions::SiCAt, function_name : "@" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcClearStats, function_name : "clearStats" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcSliceStats, function_name : "sliceStats" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcPrintSliceName, function_name : "printSliceName" },
        
    FunctionEntry {function_number: InterpreterFunctions::SiCcFind, function_name : "find" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFindEntry, function_name : "findEntry" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFetchToken, function_name : "fetchToken" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcLShift, function_name : "<<" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcIRShift, function_name : "i>>" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcrShift, function_name : ">>" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_return, function_name : "v_return" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_uint16, function_name : "v_uint16" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_uint32, function_name : "v_uint32" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_nint16, function_name : "v_nint16" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcNoop, function_name : "noop" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_if, function_name : "v_if" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_else, function_name : "v_else" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_then, function_name : "v_then" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_begin, function_name : "v_begin" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_until, function_name : "v_until" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_string, function_name : "v_string" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcIsFunction, function_name : "isFunction" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_dictionaryMask, function_name : "v_dictionaryMask" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcV_dictionaryRelative, function_name : "v_dictionaryRelative" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcNot, function_name : "~" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotRawStr, function_name : ".rawStr" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotN, function_name : ".n" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcSetBaud, function_name : "setBaud" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcSysticksPerSecond, function_name : "systicksPerSecond" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcPrintMainFileName, function_name : "printMainFileName" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcSetPromptEnable, function_name : "setPromptEnable" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcStrBang, function_name : "str!" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcCharBang, function_name : "c!" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcCharAt, function_name : "c@" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcTextIO, function_name : "textIO" },
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcNextDelay, function_name : "nextDelay" },
        
    FunctionEntry {function_number: InterpreterFunctions::SiCcIsEntryMatch, function_name : "isEntryMatch" },
    
    //#[cfg(YRSHELL_INTERPRETER_FLOATING_POINT)]
    //{
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotg, function_name : ".g" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDotf, function_name : ".f" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcDote, function_name : ".e" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFLessThan, function_name : "f<" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFLessEqual, function_name : "f<="},
    FunctionEntry {function_number: InterpreterFunctions::SiCcFEqual, function_name : "f=="},
    FunctionEntry {function_number: InterpreterFunctions::SiCcFGreaterThan, function_name : "f>"},
    FunctionEntry {function_number: InterpreterFunctions::SiCcFGreaterThanEqual, function_name : "f>="},
        
    FunctionEntry {function_number: InterpreterFunctions::SiCcFPlus, function_name : "f+" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFMinus, function_name : "f-" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFMultiply, function_name : "f*" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFDivide, function_name : "f/" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFPI, function_name : "fPI" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFSin, function_name : "fsin" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFCos, function_name : "fcos" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFTan, function_name : "ftan" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFaSin, function_name : "fasin" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFaCos, function_name : "facos" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFaTan, function_name : "fatan" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFExp, function_name : "fexp" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFLog, function_name : "flog" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFPow, function_name : "fpow" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFLog10, function_name : "flog10" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFRound, function_name : "fround" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcFloatToInt, function_name : "f>i" },
    FunctionEntry {function_number: InterpreterFunctions::SiCcIntToFloat, function_name : "i>f" },
    //}
    
    FunctionEntry {function_number: InterpreterFunctions::SiCcEchoLoop, function_name : "echoLoop" },
    
    ];
    pub static EXTENSION_FUNCTION_DICTIONARY : FuncDictionary<InterpreterFunctions> = FuncDictionary {
        table: &INTERPRETER_FUNCTIONS_TABLE,
        mask: DictionaryMask::YRSHELL_DICTIONARY_EXTENSION_FUNCTION,
    };
    